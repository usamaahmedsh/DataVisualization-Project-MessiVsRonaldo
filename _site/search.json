[
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "The Timeless Rivalry: Ronaldo vs Messi",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nif(!require(\"pacman\"))\n  install.packages(\"pacman\")\n\npacman::p_load(tidyverse, gt)\n\n\n#Ronaldo dataset downloaded from https://www.kaggle.com/datasets/azminetoushikwasi/cr7-cristiano-ronaldo-all-club-goals-stats\nronaldo &lt;- read_csv(\"data/cr7.csv\")\n\n\n#Messi dataset downloaded from https://www.kaggle.com/code/azminetoushikwasi/lionel-messi-extended-eda-goals/input?select=messi.csv\nmessi &lt;- read_csv(\"data/messi.csv\")\n\n\n\nOur High Level Goal\nTo compare and contrast the performances of Cristiano Ronaldo and Lionel Messi, only, over time and space (season / country respectively), primarily via geographical plots\n\n\n\n\nCristiano Ronaldo\n\n\n\n\n\nLionel Messi\n\n\n\n\n\nDescription\nThe datasets, compiled by Azmine Toushik Wasi and sourced from Kaggle, provides a detailed insight into the performances of two legendary footballers: Cristiano Ronaldo and Lionel Messi. These datasets offer a comprehensive view of their contributions across various seasons, competitions, matches, and events.\n\nronaldo.csv: It has 13 variables such as season, competition, result, opponent etc. In total, it has 701 rows indicating the 701 goals scored by Cristiano Ronaldo up until 2022.\nmessi.csv: It has the same 13 variables such as season, competition, result, opponent etc. In total, it has 698 rows indicating the 698 goals scored by Lionel Messi up until 2022.\n\nThese datasets enable detailed analysis and insights into the goal-scoring abilities, match contributions, playing positions, and other crucial aspects of two of football’s greatest players.\n\n\nWhy did we choose this dataset?\nRonaldo and Messi are two of the most iconic and celebrated footballers in the history of the sport. Their performances, achievements, and playing styles have demanded immense interest and attention from football fans worldwide. Since both Messi and Ronaldo have massive fanbases, there is a significant demand for analysis related to their performances. Analyzing these datasets and attempting an educated analysis facilitates a deeper understanding of their playing styles, strengths, and contributions to their respective teams.\nThe rivalry between Ronaldo and Messi has transcended the football pitch, and this analysis is our attempt to honour the legacy of the two legends who inspired an entire generation to strive for excellence.\n\n\nFirst Topic\n\nApproach\nThe first aim is to craft a side-by-side animation detailing the number of goals scored by both Ronaldo and Messi, plotted geographically over time. The plan is firstly to isolate the unique competitions the two players have participated in; gather the countries in which said competitions are hosted - via the creation of a new variable from literature searches to match competitions to their countries - and then; display said countries on a world map, and how they changed over seasons. The data of focus will be the competitions, a new variable detailing the year in which their goals were scored and a new variable detailing the region in which that competition took place. The time-frame will be from 2005 to 2022.\nThe layers of the geographical maps will be the base map itself, of the world as until 2022 that is where their careers have been based, that will be followed be a fill layer denoting that goals were scored in a specific country. The side-by-side animation will use a different fill colour for the two players, but the same global theater, to make it clear where each player has scored during each season. The animation speed will be taken into account, selecting an option that is slow enough to allow for direct inference of data and patterns, and could (potentially) be crafted in a way to allow for pausing. The seasons will be the same for the two maps at any point in the animation: for instance, the 2019-2020 season will display a few seconds after the 2018-2019 season, with both graphs changing at the same time.\nAs an aside: the two dataframes are of differing lengths due to the inclusion of additional seasons for Ronaldo - henceforth we have specified the timeframe to begin in the 2004-2005 season, as opposed to the 2002-2003 season. Also, it may be determined that an alternative display is crafted, potentially as a series of static side-by-side maps that follow each season, to allow those that are averse to animation to still be able to view the trend the data presents.\n\n\nAnalysis\nThe plots will preferably make use of geom_sf, to display maps of the globe that will be iterated via the gganimate package. To ensure that there is not an overload of information, the maps will probably be left without labels in their normal view, and may potentially add labels to countries that are highlighted as regions where goals were scored in a particular season. Context behind the difficulty of the goals may also be provided via the competitions variable: as certain competition levels are ranked as more difficult than others.\nThese plots will allow for a contrasting of careers between Ronaldo and Messi, visually viewing where the two player’s careers have taken them, and whether one or the other has consistently faced tougher competition throughout their careers. An argument could be made if such a trend does appear, that the player who has succeeded against tougher opposition may in fact be, the better player.\n\n\n\nSecond Topic\n\nApproach\nThe second target is to create an interactive map, giving details about a summary of the goals scored in each country by Ronaldo and Messi. It will allow for comparison and contrasting per country between the two players. A focus will be on highlighting the comparison between the number of goals scored by the two players in an individual region. The variables of focus will be a seasonal sum of the goals scored per regions. The time-frame will also be from 2005 to 2022.\nFor the interactive map, the focus will again be global, due to the players being scrutinized. A proposed method of utilizing interactivity will be to allow for a viewer to select a country and view a bar-chart detailing the goals score by a player, or both if they both scored in that region. The implementation of the chart could take various forms, with the entirety of the 2005 to 2022 window being displayed on a single map, or an option allowing for the selection of discrete time windows to view their stats within: for example, comparing the goals scored in Italy by Ronaldo and/or Messi during the years 2005 to 2010.\n\n\nAnalysis\ngeom_sf will be once again employed to allow for a visualization of the globe, however plotly will be incorporated on this occasion, to craft a map that can be interacted with and explored for its values and insights. Within the interactive map, once a country is clicked - an internal plot will be displayed: a bar / column / line chart will display the goals scored within a country for both players, probably over a period spanning all the years.\nThe map will allow for an analysis of the performances of Messi and Ronaldo in certain regions specifically, such as allowing one to compare or contrast the goals scored by the two in a region where they both decided to play football. This would enable a more direct comparison of the two players in specific leagues to discern whether one was consistently more impactful on games than the other - in regards to goals scored.\n\n\n\nThe Data\nThe dataset appears to contain information related to football matches, likely from a specific club or league. Here’s a breakdown of the columns:\n\n\n\n\n\n\n\n\n\nS.No.\nColumn Name\nDatatype\nDescription\n\n\n\n\n1.\nSeason\nCharacter\nIndicates the season of the competition in which the match took place\n\n\n2.\nCompetition\nCharacter\nSpecifies the name or type of the competition (e.g., league, cup).\n\n\n3.\nMatchday\nCharacter\nIndicates the matchday number within the competition.\n\n\n4.\nDate\nDate\nRepresents the date on which the match was played.\n\n\n5.\nVenue\nCharacter\nSpecifies the location where the match was held.\n\n\n6.\nClub\nCharacter\nRefers to the name of the football club involved in the match.\n\n\n7.\nOpponent\nCharacter\nRefers to the opposing team.\n\n\n8.\nResult\nCharacter\nIndicates the outcome of the match, usually in terms of goals scored by each team.\n\n\n9.\nPlaying_Position\nCharacter\nSpecifies the position played by the player.\n\n\n10.\nMinute\nInteger\nIndicates the minute in which a particular event occurred (e.g., goal, substitution).\n\n\n11.\nAt_score\nCharacter\nRepresents the score at the time of the event.\n\n\n12.\nType\nCharacter\nDescribes the type of event (e.g., goal, assist).\n\n\n13.\nGoal_assist\nCharacter\nIndicates the player who assisted in scoring the goal.\n\n\n\nThe new variable Year will be converted to a datetime object; Minute will be converted to Integer; Season will be converted to PosixCT\nNo-Assist NAs will be replaced with “No Assists”\n\n\nThe Datasets\n\n\nCode\nronaldoTop &lt;- head(ronaldo)\nmessiTop &lt;- head(messi)\n\n\nronaldoTop %&gt;%gt() %&gt;%\ntab_header(title = md(\"**Cristiano Ronaldo**\")) %&gt;%\n  \ntab_style(\n  style = list(cell_fill(color = \"#fff0ef\"),\n  cell_text(weight = \"bold\")),\nlocations = cells_body(columns = Competition)) %&gt;% \n  \ntab_style(\n  style = cell_text(weight = \"bold\"),\n  locations = cells_column_labels()\n) %&gt;%\n  tab_options(column_labels.background.color = \"red\")\n\n\n\n\n\n\n  \n    \n      Cristiano Ronaldo\n    \n    \n    \n      Season\n      Competition\n      Matchday\n      Date\n      Venue\n      Club\n      Opponent\n      Result\n      Playing_Position\n      Minute\n      At_score\n      Type\n      Goal_assist\n    \n  \n  \n    02/03\nLiga Portugal\n6\n10-07-02\nH\nSporting CP\nMoreirense FC\n3:00\nLW\n34\n2:00\nSolo run\nNA\n    02/03\nLiga Portugal\n6\n10-07-02\nH\nSporting CP\nMoreirense FC\n3:00\nLW\n90+5\n3:00\nHeader\nRui Jorge\n    02/03\nLiga Portugal\n8\n10/26/02\nA\nSporting CP\nBoavista FC\n1:02\nNA\n88\n1:02\nRight-footed shot\nCarlos Martins\n    02/03\nTaca de Portugal Placard\nFourth Round\n11/24/02\nH\nSporting CP\nCD Estarreja\n4:01\nNA\n67\n3:00\nLeft-footed shot\nCesar Prates\n    02/03\nTaca de Portugal Placard\nFifth Round\n12/18/02\nH\nSporting CP\nFC Oliveira do Hospital\n8:01\nNA\n13\n3:00\nNA\nNA\n    03/04\nPremier League\n11\n11-01-03\nH\nManchester United\nPortsmouth FC\n3:00\nRW\n80\n2:00\nDirect free kick\nNA\n  \n  \n  \n\n\n\n\nCode\nmessiTop %&gt;%gt() %&gt;%\ntab_header(title = md(\"**Lionel Messi**\")) %&gt;%\n  \ntab_style(\n  style = list(cell_fill(color = \"#b2f7ef\"),\n  cell_text(weight = \"bold\")),\nlocations = cells_body(columns = Competition)) %&gt;% \n  \ntab_style(\n  style = cell_text(weight = \"bold\"),\n  locations = cells_column_labels()\n) %&gt;%\n  tab_options(column_labels.background.color = \"lightblue\")\n\n\n\n\n\n\n  \n    \n      Lionel Messi\n    \n    \n    \n      Season\n      Competition\n      Matchday\n      Date\n      Venue\n      Club\n      Opponent\n      Result\n      Playing_Position\n      Minute\n      At_score\n      Type\n      Goal_assist\n    \n  \n  \n    04/05\nLaLiga\n34\n05-01/05\nH\nFC Barcelona\nAlbacete Balompie\n2:00\nCF\n90+1\n2:00\nLeft-footed shot\nRonaldinho Gaacho\n    05/06\nUEFA Champions League\nGroup Stage\n11-02/05\nH\nFC Barcelona\nPanathinaikos Athens\n5:00\nRW\n34\n3:00\nLeft-footed shot\nNA\n    05/06\nLaLiga\n13\n11/27/05\nH\nFC Barcelona\nRacing Santander\n4:01\nRW\n51\n2:00\nLeft-footed shot\nSamuel Etoo\n    05/06\nLaLiga\n19\n1/15/06\nH\nFC Barcelona\nAthletic Bilbao\n2:01\nRW\n50\n2:01\nLeft-footed shot\nMark van Bommel\n    05/06\nLaLiga\n20\n1/22/06\nH\nFC Barcelona\nDeportivo Alaves\n2:00\nCF\n82\n2:00\nLeft-footed shot\nRonaldinho Gaacho\n    05/06\nLaLiga\n21\n1/29/06\nA\nFC Barcelona\nRCD Mallorca\n0:03\nCF\n75\n0:02\nRight-footed shot\nSylvinho\n  \n  \n  \n\n\n\n\n\n\nOur Weekly Plan\n\n\n\n\n\n\n\n\n\n\n\nTask Name\nStatus\nAssignee\nDue\nPriority\nSummary\n\n\n\n\nCreate the proposal\nPending\n\n03 April\nHigh\nCreate the initial documented proposal\n\n\nCreate the Git Repo\nPending\n\n03 April\nModerate\nCreate a new repository for data\n\n\nResubmit proposal\nPending\n\n08 April\nHigh\nResubmit revised proposal\n\n\nData wrangling\nPending\n\n08 April\nModerate\nInitial exploration and cleaning of the datasets\n\n\nAnalysis of topic one\nPending\n\n15 April\nModerate\n\n\n\nAnalysis of topic two\nPending\n\n22 April\nLow\n\n\n\nPlotting for topic one\nPending\n\n29 April\nLow\n\n\n\nPlotting for topic two\nPending\n\n29 April\nLow\n\n\n\nSummarising of information\nPending\n\n01 May\nLow\n\n\n\nWrite up\nPending\n\n06 May\nLow\n\n\n\nPresentation\nPending\n\n06 May\nLow\n\n\n\nFinal organisation\nPending\n\n06 May\nLow\n\n\n\nSite publishing\nPending\n\n06 May\nLow\n\n\n\nFinal submission\nPending\n\n06 May\nLow\nFinal submission of the entire repository"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This project was developed by [Team Name] For INFO 526 - Data Analysis & Visualization at the University of Arizona, taught by Dr. Greg Chism. The team is comprised of the following team members.\n\nTeam member 1: One sentence description of Team member 1 (e.g., year, major, etc.).\nTeam member 2: One sentence description of Team member 2 (e.g., year, major, etc.).\nTeam member 3: One sentence description of Team member 3 (e.g., year, major, etc.).\nTeam member 4: One sentence description of Team member 4 (e.g., year, major, etc.)."
  },
  {
    "objectID": "presentation.html",
    "href": "presentation.html",
    "title": "Project title",
    "section": "",
    "text": "The presentation is created using the Quarto CLI\n## sets the start of a new slide\n\n\n\n\nYou can use plain text\n\n\n\nor bullet points1\n\n\nor in two columns\n\n\n\nlike\nthis\n\n\n\n\n\n\n# A tibble: 2 × 5\n  term        estimate std.error statistic       p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n1 (Intercept)   25.3      3.08        8.22 0.00000000358\n2 speed         -0.116    0.0642     -1.81 0.0806       \n\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic p.value    df logLik   AIC   BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1    0.0983        0.0682  5.82      3.27  0.0806     1  -101.  207.  212.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;\n\n\n\n\n\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nSome text\ngoes here"
  },
  {
    "objectID": "presentation.html#quarto",
    "href": "presentation.html#quarto",
    "title": "Project title",
    "section": "",
    "text": "The presentation is created using the Quarto CLI\n## sets the start of a new slide"
  },
  {
    "objectID": "presentation.html#layouts",
    "href": "presentation.html#layouts",
    "title": "Project title",
    "section": "",
    "text": "You can use plain text\n\n\n\nor bullet points1\n\n\nor in two columns\n\n\n\nlike\nthis"
  },
  {
    "objectID": "presentation.html#code",
    "href": "presentation.html#code",
    "title": "Project title",
    "section": "",
    "text": "# A tibble: 2 × 5\n  term        estimate std.error statistic       p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;         &lt;dbl&gt;\n1 (Intercept)   25.3      3.08        8.22 0.00000000358\n2 speed         -0.116    0.0642     -1.81 0.0806       \n\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic p.value    df logLik   AIC   BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1    0.0983        0.0682  5.82      3.27  0.0806     1  -101.  207.  212.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;"
  },
  {
    "objectID": "presentation.html#plots",
    "href": "presentation.html#plots",
    "title": "Project title",
    "section": "",
    "text": "Warning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "presentation.html#plot-and-text",
    "href": "presentation.html#plot-and-text",
    "title": "Project title",
    "section": "",
    "text": "Some text\ngoes here"
  },
  {
    "objectID": "presentation.html#tables",
    "href": "presentation.html#tables",
    "title": "Project title",
    "section": "Tables",
    "text": "Tables\nIf you want to generate a table, make sure it is in the HTML format (instead of Markdown or other formats), e.g.,\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n\n\nAdelie\nTorgersen\n40.3\n18.0\n195\n3250\nfemale\n\n\nAdelie\nTorgersen\nNA\nNA\nNA\nNA\nNA\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n\n\nAdelie\nTorgersen\n39.3\n20.6\n190\n3650\nmale"
  },
  {
    "objectID": "presentation.html#images",
    "href": "presentation.html#images",
    "title": "Project title",
    "section": "Images",
    "text": "Images\n\n\n\nImage credit: Danielle Navarro, Percolate."
  },
  {
    "objectID": "presentation.html#math-expressions",
    "href": "presentation.html#math-expressions",
    "title": "Project title",
    "section": "Math Expressions",
    "text": "Math Expressions\nYou can write LaTeX math expressions inside a pair of dollar signs, e.g. $\\alpha+\\beta$ renders \\(\\alpha + \\beta\\). You can use the display style with double dollar signs:\n$$\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i$$\n\\[\n\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i\n\\]\nLimitations:\n\nThe source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting $$ must appear in the very beginning of a line, followed immediately by a non-space character, and the ending $$ must be at the end of a line, led by a non-space character;\nThere should not be spaces after the opening $ or before the closing $."
  },
  {
    "objectID": "presentation.html#feeling-adventurous",
    "href": "presentation.html#feeling-adventurous",
    "title": "Project title",
    "section": "Feeling adventurous?",
    "text": "Feeling adventurous?\n\nYou are welcomed to use the default styling of the slides. In fact, that’s what I expect majority of you will do. You will differentiate yourself with the content of your presentation.\nBut some of you might want to play around with slide styling. Some solutions for this can be found at https://quarto.org/docs/presentations/revealjs."
  },
  {
    "objectID": "presentation.html#footnotes",
    "href": "presentation.html#footnotes",
    "title": "Project title",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nAnd add footnotes↩︎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Project Title",
    "section": "",
    "text": "Add project abstract here.\n\nCountryCompetitionOpponentMatchdayLast Minute Goals\n\n\nSpainEnglandFranceGermanyItaly\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLaLigaUEFA Champions LeagueCopa del Rey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReal MadridFC BarcelonaManchester UnitedBayern MunichLiverpool FCChelsea FCJuventus FCParis Saint-GermainArsenal FCBorussia Dortmund\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuarter-FinalsSemi-FinalsFinal\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&gt;90&gt;80"
  },
  {
    "objectID": "index.html#abstract",
    "href": "index.html#abstract",
    "title": "Project Title",
    "section": "",
    "text": "Add project abstract here.\n\nCountryCompetitionOpponentMatchdayLast Minute Goals\n\n\nSpainEnglandFranceGermanyItaly\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLaLigaUEFA Champions LeagueCopa del Rey\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReal MadridFC BarcelonaManchester UnitedBayern MunichLiverpool FCChelsea FCJuventus FCParis Saint-GermainArsenal FCBorussia Dortmund\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQuarter-FinalsSemi-FinalsFinal\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&gt;90&gt;80"
  },
  {
    "objectID": "data/test.html",
    "href": "data/test.html",
    "title": "Project Title",
    "section": "",
    "text": "Rows: 5\nColumns: 3\nGroups: label [2]\n$ label   &lt;chr&gt; \"Messi\", \"Ronaldo\", \"Ronaldo\", \"Ronaldo\", \"Messi\"\n$ Club    &lt;chr&gt; \"FC Barcelona\", \"Real Madrid\", \"Manchester United\", \"Juventus …\n$ count_h &lt;int&gt; 383, 228, 87, 57, 14\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCountry\n\nCountry\n\nSpain \n\n\n\nEngland \n\n\n\nFrance \n\n\n\nGermany \n\n\n\nItaly"
  },
  {
    "objectID": "index.html#select-country",
    "href": "index.html#select-country",
    "title": "Project Title",
    "section": "Select Country",
    "text": "Select Country\n### Spain\n\n```{.tabset .tabset-pills}\n#### Plot\n\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n\n#### Code\n\n```{r}\nplotter( Spain , combined_df)\n\nDescription\nThis plot shows the number of goals for players in Spain .\n\n\nEngland\n#### Plot\n\n![](index_files/figure-html/unnamed-chunk-7-2.png){width=672}\n\n#### Code\n\n```{r}\nplotter( England , combined_df)\n\nDescription\nThis plot shows the number of goals for players in England .\n\n\n\nFrance\n#### Plot\n\n![](index_files/figure-html/unnamed-chunk-7-3.png){width=672}\n\n#### Code\n\n```{r}\nplotter( France , combined_df)\n\nDescription\nThis plot shows the number of goals for players in France .\n\n\n\nGermany\n#### Plot\n\n![](index_files/figure-html/unnamed-chunk-7-4.png){width=672}\n\n#### Code\n\n```{r}\nplotter( Germany , combined_df)\n\nDescription\nThis plot shows the number of goals for players in Germany .\n\n\n\nItaly\n#### Plot\n\n![](index_files/figure-html/unnamed-chunk-7-5.png){width=672}\n\n#### Code\n\n```{r}\nplotter( Italy , combined_df)\n\nDescription\nThis plot shows the number of goals for players in Italy .\n\n\n\n\n:::{#quarto-navigation-envelope .hidden}\n[Project Title]{.hidden render-id=\"quarto-int-sidebar-title\"}\n[Project Title]{.hidden render-id=\"quarto-int-navbar-title\"}\n[Project]{.hidden render-id=\"quarto-int-navbar:Project\"}\n[/index.html]{.hidden render-id=\"quarto-int-navbar:/index.html\"}\n[Proposal]{.hidden render-id=\"quarto-int-navbar:Proposal\"}\n[/proposal.html]{.hidden render-id=\"quarto-int-navbar:/proposal.html\"}\n[Presentation]{.hidden render-id=\"quarto-int-navbar:Presentation\"}\n[/presentation.html]{.hidden render-id=\"quarto-int-navbar:/presentation.html\"}\n[About]{.hidden render-id=\"quarto-int-navbar:About\"}\n[/about.html]{.hidden render-id=\"quarto-int-navbar:/about.html\"}\n[https://github.com/INFO-526-S24/project-final]{.hidden render-id=\"quarto-int-navbar:https://github.com/INFO-526-S24/project-final\"}\n:::\n\n\n\n:::{#quarto-meta-markdown .hidden}\n[Project Title]{.hidden render-id=\"quarto-metatitle\"}\n[Project Title]{.hidden render-id=\"quarto-twittercardtitle\"}\n[Project Title]{.hidden render-id=\"quarto-ogcardtitle\"}\n[Project Title]{.hidden render-id=\"quarto-metasitename\"}\n[Project description]{.hidden render-id=\"quarto-twittercarddesc\"}\n[Project description]{.hidden render-id=\"quarto-ogcardddesc\"}\n:::\n\n\n\n\n&lt;!-- --&gt;\n\n::: {.quarto-embedded-source-code}\n```````````````````{.markdown shortcodes=\"false\"}\n---\ntitle: \"Project Title\"\nsubtitle: \"INFO 526 - Project Final\"\nauthor: \n  - name: \"Team name - Team member 1, Team member 2,...\"\n    affiliations:\n      - name: \"School of Information, University of Arizona\"\ndescription: \"Project description\"\nformat:\n   html:\n    code-tools: true\n    code-overflow: wrap\n    embed-resources: true\n    self_contained: yes\n    highlight: null\n    mathjax: null\n    theme: default\n    toc: true\n    number_sections: true\neditor: visual\nexecute:\n  warning: false\n  echo: false\n---\n\n## Abstract\n\nAdd project abstract here.\n\nquarto-executable-code-5450563D\n\n```r\npacman::p_load(tidyverse, readr,here, stringr, sf, \"rnaturalearth\", \"rnaturalearthdata\", \"ggspatial\")\n\nronaldo &lt;- read_csv(here(\"data\",\"cr7.csv\"))\n\n\nmessi &lt;- read_csv(here(\"data\",\"messi.csv\"))\n# \n# \n# \n# ronaldo &lt;- ronaldo %&gt;%\n#   mutate(\n#     Year = paste0(\"20\", str_sub(Date, -2, -1))\n# )\n# \n# messi &lt;- messi %&gt;%\n#   mutate(\n#     Year = paste0(\"20\", str_sub(Date, -2, -1))\n# )\n# \n# \n# \n# \n# \n# \n# \n# \n# \n# \n# \n# \n# \n# \n# \n# \n# \n# \n# europe &lt;- subset(world, geounit %in% c(\"Albania\", \"Andorra\", \"Armenia\", \"Austria\", \"Azerbaijan\",\n#                                       \"Belarus\", \"Belgium\", \"Bosnia and Herzegovina\", \"Bulgaria\",\n#                                       \"Croatia\", \"Cyprus\", \"Czechia\",\"Denmark\",\"Estonia\",\"Finland\", \n#                                       \"France\",\"Georgia\", \"Germany\", \"Greece\",\"Hungary\",\"Iceland\", \n#                                       \"Ireland\", \"Italy\",\"Kazakhstan\", \"Kosovo\", \"Latvia\",\"Liechtenstein\", \n#                                       \"Lithuania\", \"Luxembourg\",\"Malta\",\"Moldova\",\"Monaco\",\"Montenegro\",\n#                                       \"Macedonia\", \"Netherlands\",\"Norway\",\"Poland\",\"Portugal\",\"Romania\",\n#                                       \"Russia\",\"San Marino\",\"Serbia\",\"Slovakia\",\"Slovenia\",\"Spain\",\n#                                       \"Sweden\",\"Switzerland\",\"Turkey\",\"Ukraine\",\"UK\",\"Vatican\"))\n# \n# map &lt;- ggplot(data = europe) +\n#     geom_sf(aes()) + theme_minimal() + theme()\n# \n# \n# map\n# #ggplotly(map, dynamicTicks = T)\n\nquarto-executable-code-5450563D\n#| fig-width: 15\n#| fig-height: 15\n# \n# pacman::p_load(tidyverse, readr, stringr, sf, \"rnaturalearth\", \"rnaturalearthdata\", \"ggspatial\")\n# \n# \n# ronaldo &lt;- read_csv(\"data/cr7.csv\")\n# messi &lt;- read_csv(\"data/messi.csv\")\n# \n# \n# \n# ronaldo &lt;- ronaldo %&gt;%\n#   mutate(\n#     Year = paste0(\"20\", str_sub(Date, -2, -1))\n# )\n# \n# messi &lt;- messi %&gt;%\n#   mutate(\n#     Year = paste0(\"20\", str_sub(Date, -2, -1))\n# )\n# \n# \n# ronaldo &lt;- ronaldo %&gt;%\n#   filter(Season != \"02/03\" & Season != \"03/04\")\n# \n# \n# world &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n# testedJoin &lt;- \n# \n# \n# \n# \n# \n# #setDT(ronaldo)\n# #setDT(messi)\n# \n# \n# #View(ronaldo[!(Season %in% c(\"02/03\",\"03/04\")), .N, keyby = .(Opponent)])\n# \n# # Need to find the country opponent\n# # We can add number of goals scored against which team/how many goals\n# \n# #ronaldo[, key := \"Ronaldo\"]\n# #messi[, key := \"Messi\"]\n# \n# combined &lt;- bind_rows(ronaldo,messi, .id = \"Player\")\n# \n# combined &lt;- combined %&gt;%\n#   mutate(Player = case_when(\n#     Player == 1 ~ \"Ronaldo\",\n#     Player == 2 ~ \"Messi\"\n#   ))\n# \n# combined2 &lt;- combined\n# #View(newdf[!(Season %in% c(\"02/03\",\"03/04\")), .N, keyby = .(Opponent, key)]) # We can include this in the map\n# \n# #View(newdf[, .N, Opponent])\n# \n# #unique &lt;- unique(combined$Opponent)\n# #print(unique)\n# \n# countries &lt;- data.frame(coun = c('Moreirense FC - Portugal',\n#                'Boavista FC - Portugal',\n#                'CD Estarreja - Portugal',\n#                'FC Oliveira do Hospital - Portugal',\n#                'Portsmouth FC - England',\n#                'Manchester City - England',\n#                'Tottenham Hotspur - England',\n#                'Birmingham City - England',\n#                'Aston Villa - England',\n#                'Millwall FC - England',\n#                'Southampton FC - England',\n#                'Exeter City - England',\n#                'Arsenal FC - England',\n#                'Everton FC - England',\n#                'Fulham FC - England',\n#                'Newcastle United - England',\n#                'Debreceni VSC - Hungary',\n#                'Middlesbrough FC - England',\n#                'West Bromwich Albion - England',\n#                'Bolton Wanderers - England',\n#                'Wigan Athletic - England',\n#                'Charlton Athletic - England',\n#                'Reading FC - England',\n#                'Watford FC - England',\n#                'AS Roma - Italy',\n#                'AC Milan - Italy',\n#                'Sporting CP - Portugal',\n#                'Dynamo Kyiv - Ukraine',\n#                'Blackburn Rovers - England',\n#                'Derby County - England',\n#                'Sunderland AFC - England',\n#                'West Ham United - England',\n#                'Olympique Lyon - France',\n#                'Liverpool FC - England',\n#                'Chelsea FC - England',\n#                'Hull City - England',\n#                'Stoke City - England',\n#                'Gamba Osaka - Japan',\n#                'FC Internazionale - Italy',\n#                'FC Porto - Portugal',\n#                'Deportivo de La Coruña - Spain',\n#                'RCD Espanyol Barcelona - Spain',\n#                'FC Zürich - Switzerland',\n#                'Xerez CD - Spain',\n#                'Villarreal CF - Spain',\n#                'Olympique Marseille - France',\n#                'UD Almería - Spain',\n#                'Real Zaragoza - Spain',\n#                'Malaga CF - Spain',\n#                'CD Tenerife - Spain',\n#                'Sevilla FC - Spain',\n#                'Real Valladolid CF - Spain',\n#                'Getafe CF - Spain',\n#                'Racing Santander - Spain',\n#                'Valencia CF - Spain',\n#                'CA Osasuna - Spain',\n#                'RCD Mallorca - Spain',\n#                'Athletic Bilbao - Spain',\n#                'Hercules CF - Spain',\n#                'Real Murcia CF - Spain',\n#                'Ajax Amsterdam - Netherlands',\n#                'AJ Auxerre - France',\n#                'Levante UD - Spain',\n#                'Atletico de Madrid - Spain',\n#                'Real Sociedad - Spain',\n#                'FC Barcelona - Spain',\n#                'Rayo Vallecano - Spain',\n#                'Sporting Gijón - Spain',\n#                'SD Ponferradina - Spain',\n#                'Granada CF - Spain',\n#                'CSKA Moscow - Russia',\n#                'Real Betis Balompie - Spain',\n#                'APOEL Nicosia - Cyprus',\n#                'Bayern Munich - Germany',\n#                'Celta de Vigo - Spain',\n#                'Borussia Dortmund - Germany',\n#                'Manchester United - England',\n#                'Galatasaray - Turkey',\n#                'Elche CF - Spain',\n#                'FC Copenhagen - Denmark',\n#                'Juventus FC - Italy',\n#                'FC Schalke 04 - Germany',\n#                'Córdoba CF - Spain',\n#                'FC Basel 1893 - Switzerland',\n#                'Ludogorets Razgrad - Bulgaria',\n#                'SD Eibar - Spain',\n#                'Shakhtar Donetsk - Ukraine',\n#                'Malmö FF - Sweden',\n#                'UD Las Palmas - Spain',\n#                'VfL Wolfsburg - Germany',\n#                'Deportivo Alaves - Spain',\n#                'CF America - Mexico',\n#                'Kashima Antlers - Japan',\n#                'Al-Jazira (Abu Dhabi) - United Arab Emirates',\n#                'Grêmio Foot-Ball Porto Alegrense - Brazil',\n#                'Paris Saint-Germain - France',\n#                'Girona FC - Spain',\n#                'US Sassuolo - Italy',\n#                'Frosinone Calcio - Italy',\n#                'Udinese Calcio - Italy',\n#                'Genoa CFC - Italy',\n#                'Empoli FC - Italy',\n#                'SPAL - Italy',\n#                'ACF Fiorentina - Italy',\n#                'Torino FC - Italy',\n#                'Atalanta BC - Italy',\n#                'UC Sampdoria - Italy',\n#                'SS Lazio - Italy',\n#                'Parma Calcio 1913 - Italy',\n#                'Inter Milan - Italy',\n#                'SSC Napoli - Italy',\n#                'Hellas Verona - Italy',\n#                'Bayer 04 Leverkusen - Germany',\n#                'Bologna FC 1909 - Italy',\n#                'Cagliari Calcio - Italy',\n#                'US Lecce - Italy',\n#                'Spezia Calcio - Italy',\n#                'Ferencvarosi TC - Hungary',\n#                'FC Crotone - Italy',\n#                'BSC Young Boys - Switzerland',\n#                'Norwich City - England',\n#                'Burnley FC - England',\n#                'Brighton & Hove Albion - England',\n#                'Brentford FC - England',\n#                'FC Sheriff - Moldova',\n#                'Albacete Balompie - Spain',\n#                'Panathinaikos Athens - Greece',\n#                'SV Werder Bremen - Germany',\n#                'Real Madrid - Spain',\n#                'Recreativo Huelva - Spain',\n#                'Deportivo de La Coruña - Spain',\n#                'Gimnastic de Tarragona - Spain',\n#                'VfB Stuttgart - Germany',\n#                'UD Almería - Spain',\n#                'Rangers FC - Scotland',\n#                'Celtic FC - Scotland',\n#                'Benidorm CD - Spain',\n#                'CD Numancia - Spain',\n#                'Cultural Leonesa - Spain',\n#                'CF Atlante - Mexico',\n#                'Club Estudiantes de La Plata - Argentina',\n#                'Club Atletico de Ceuta - Spain',\n#                'BATE Borisov - Belarus',\n#                'FC Viktoria Plzen - Czech Republic',\n#                'Santos FC - Brazil',\n#                'Spartak Moscow - Russia',\n#                'CA River Plate - Argentina',\n#                'CD Leganes - Spain',\n#                'Borussia Mönchengladbach - Germany',\n#                'Olympiacos Piraeus - Greece',\n#                'SD Huesca - Spain',\n#                'PSV Eindhoven - Netherlands',\n#                'SK Slavia Prague - Czech Republic',\n#                'Cadiz CF - Spain',\n#                'RB Leipzig - Germany',\n#                'FC Nantes - France',\n#                'Club Brugge KV - Belgium',\n#                'LOSC Lille - France',\n#                'FC Lorient - France',\n#                'RC Lens - France',\n#                'Montpellier - France',\n#                'Clermont Foot - France',\n#                'Maccabi Haifa - Israel',\n#                'OGC Nice - France',\n#                'SL Benfica - Portugal',\n#                'AC Ajaccio - France',\n#                'ESTAC Troyes - France'\n# )) \n# \n# \n# countries &lt;- separate(countries, coun, into = c(\"Opponent\", \"Country\"), sep = \" - \")\n# \n# combined &lt;- left_join(combined, countries, by = \"Opponent\")\n# combined2 &lt;- left_join(combined2, countries, by = \"Opponent\")\n# \n# #View(newdf[is.na(Country), .(Opponent)])\n# \n# \n# \n# \n# worldTesting &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n# worldMerge &lt;- merge(combined, worldTesting, by.x = \"Country\", by.y = \"geounit\")\n# worldMerge2 &lt;- left_join(worldTesting, combined, by = c(\"geounit\" = \"Country\"))\n# \n# \n# \n# combined3 &lt;- combined %&gt;%\n#   mutate(Country = case_when(\n#     Country == \"England\" ~ \"United Kingdom\",\n#     Country == \"Wales\" ~ \"United Kingdom\",\n#     Country == \"Scotland\" ~ \"United Kingdom\",\n#     Country == \"Czech Republic\" ~ \"Czechia\",\n#     T ~ Country\n#   ))\n# \n# worldMerge &lt;- merge(combined3, worldTesting, by.x = \"Country\", by.y = \"geounit\")\n# worldMerge3 &lt;- merge(worldTesting, combined3, by.y = \"Country\", by.x = \"geounit\")\n# \n# worldMerge2 &lt;- left_join(combined3, worldTesting, by = c(\"Country\" = \"geounit\"))\n# \n# worldMerge4 &lt;- full_join(combined3, worldTesting, by = c(\"Country\" = \"geounit\"))\n# \n# worldMerge5 &lt;- worldMerge4 %&gt;%\n#   filter(!is.na(Country)) %&gt;%\n#   select(c(1:16, 20, 184))\n# \n# \n# worldMerge7 &lt;- full_join(worldTesting, combined3, by = c(\"geounit\" = \"Country\"))\n# worldMerge7 &lt;- worldMerge7 %&gt;%\n#   filter(!is.na(geounit)) %&gt;%\n#   select(c(13,165:184))\n# \n# \n# map &lt;- ggplot() +\n#   geom_sf(data = worldMerge3, aes(geometry = geometry)) +\n#   theme_minimal() +\n#   theme()\n# \n# map &lt;- ggplot() +\n#   geom_sf(data = worldTesting, aes(geometry = geometry)) +\n#   geom_sf(data = worldMerge2, aes(geometry = geometry), fill = \"azure\") +\n#   theme_minimal() +\n#   theme()\n#     #geom_sf(aes(geometry = geometry)) + theme_minimal() + theme() \n# \n# map\n# \n# \n# \n# worldMerge6 &lt;- combined3 %&gt;%\n#   group_by(Year) %&gt;%\n#   full_join(worldTesting, by = c(\"Country\" = \"geounit\"))\n# \n# \n# \n# map &lt;- ggplot() +\n#   geom_sf(data = worldMerge4, aes(geometry = geometry, fill = is.na(Player))) +\n#   theme_minimal() +\n#   theme() +\n#   scale_fill_manual(values = c(\"gold\", \"azure\"))\n# \n# \n# map &lt;- ggplot(data = worldMerge5) +\n#   geom_sf(aes(geometry = geometry, fill = is.na(Player))) +\n#   theme_minimal() +\n#   theme() +\n#   scale_fill_manual(values = c(\"gold\", \"azure\"))\n# \n# map &lt;- ggplot() +\n#   geom_sf(data = worldTesting, aes(geometry = geometry)) +\n#   geom_sf(data = worldMerge5, aes(geometry = geometry, fill = is.na(Player))) +\n#   theme_minimal() +\n#   theme() +\n#   scale_fill_manual(values = c(\"gold\", \"azure\"))\n# map\n# \n# ggplotly(map)\n# \n# \n# pacman::p_load(remotes)\n# remotes::install_github(\"plotly/dashR\", upgrade = \"always\")\n# library(dash)\n# \n# app &lt;- dash_app()\n#  \n\nquarto-executable-code-5450563D\n#| fig-width: 15\n#| fig-height: 15\n# pacman::p_load(rworldmap)\n# # Example data frame\n# dat &lt;- data.frame(\n#   \"country\" = c(\"India\", \"China\", \"Mexico\", \"United States\"),\n#   \"Unique_person\" = c(2, 1, 1, 14)\n# )\n# # Merge data with world map\n# sdat &lt;- joinCountryData2Map(dat, joinCode = \"NAME\", nameJoinColumn = \"country\")\n# # Plot the map\n# mapCountryData(sdat, nameColumnToPlot = \"Unique_person\", catMethod = \"fixedWidth\", addLegend = TRUE)\n# \n# \n# \n# \n# \n# test &lt;- joinCountryData2Map(combined, joinCode = \"NAME\", nameJoinColumn = \"Country\") %&gt;%\n#   data.frame()\n#   \n#   \n# ggplot() + geom_\n# \n# \n# \n# test &lt;- joinCountryData2Map(combined, joinCode = \"NAME\", nameJoinColumn = \"Country\")\n# mapCountryData(test, nameColumnToPlot = \"Country\", catMethod = \"fixedWidth\", addLegend = TRUE)\n# \n\nquarto-executable-code-5450563D\n#| fig-width: 30\n#| fig-height: 30\n# library(ggplot2)\n# library(maps)\n# # Example data frame\n# data &lt;- data.frame(\n#   \"Country\" = c(\"India\", \"China\", \"Mexico\", \"United States\"),\n#   \"Country_code\" = c(\"IN\", \"CN\", \"MX\", \"USA\"),\n#   \"Id\" = c(40, 3781, 40, 1000),\n#   \"Unique_person\" = c(2, 1, 1, 14)\n# )\n# \n# \n# # Merge data with world map\n# data &lt;- merge(data, map_data(\"world\"), by.x = \"Country\", by.y = \"region\")\n# # Create the plot\n# ggplot(data, aes(long, lat, map_id = Country)) +\n#   geom_map(aes(fill = Unique_person), map = map_data(\"world\"), color = \"white\") +\n#   scale_fill_continuous(low = \"lightgray\", high = \"blue\") +\n#   theme_void() +\n#   theme(legend.position = \"bottom\")\n# \n# \n# \n# \n# \n# \n# \n# \n# testAgain &lt;- merge(combined, map_data(\"world\"), by.x = \"Country\", by.y = \"region\")\n# \n# \n# ggplot(testAgain, aes(long, lat, map_id = Country)) +\n#   geom_polygon(data = map_data(\"world\"), aes(x = long, y = lat, group = group), color = \"black\") +\n#   geom_map(aes(fill = Season), map = map_data(\"world\"), color = \"white\") +\n#   theme_void()\n# \n# \n# \n# \n# \n# map_data(\"world\")\n# \n# \n# \n# \n# \n# \n# # Get the coordinates for each country\n# country_coord &lt;- data.frame(coordinates(combined), stringsAsFactors = FALSE)\n# # Filter your desired countries\n# #country &lt;- c(\"Greece\", \"France\", \"Spain\", \"Italy\", \"UK\", \"Finland\", \"Norway\", \"Sweden\", \"Germany\", \"Romania\")\n# #country_coord &lt;- country_coord[country,]\n# # Insert country labels in the plot\n# text(x = country_coord$X1, y = country_coord$X2, labels = row.names(country_coord))\n# \n\n\nquarto-executable-code-5450563D\n#| fig-width: 20\n#| fig-height: 20\n########\n# \n# matchedTest &lt;- joinCountryData2Map(combined2, joinCode = \"NAME\", nameJoinColumn = \"Country\")\n# country_coordTest &lt;- data.frame(coordinates(matchedTest), stringsAsFactors = FALSE)\n# \n# country_coordTest2 &lt;- country_coordTest %&gt;%\n#   mutate(country = row.names(country_coordTest))\n# \n# testAgain &lt;- testAgain %&gt;%\n#   left_join(country_coordTest2, by = c(\"Country\" = \"country\"))\n# \n# #country_coordTest3 &lt;- country_coordTest %&gt;%\n# #  mutate(country = country_coordTest[0])\n# \n# pacman:: p_load(gganimate, plotly, maps, ggthemes)\n# \n# map &lt;- ggplot() +\n#   geom_polygon(data = map_data(\"world\"), aes(x = long, y = lat, group = group), color = \"lightgrey\", fill = \"azure\") +\n#   geom_map(data = testAgain, aes(fill = Year, long, lat, map_id = Country), map = map_data(\"world\"), color = \"white\") +\n#   theme_void() + \n#   geom_text(data = testAgain, aes(x = X1, y = X2, label = Country)) +\n#   ggtitle(\"Year: \") +\n#   theme(legend.position = \"none\") +\n#   transition_states(Year, 5, 1, T) + \n#   facet_wrap2(vars(Player))\n# \n#   #geom_text(data = testAgain, aes(label = Year), x = 100, y = 100) +\n# \n# \n# map &lt;- ggplot()  +\n#   geom_map(data = testAgain, aes(fill = Year, long, lat, map_id = Country), map = map_data(\"world\"), color = \"white\") +\n#   theme_void() + \n#   geom_text(data = testAgain, aes(x = X1, y = X2, label = Country)) +\n#   ggtitle(\"Year: \") +\n#   theme(legend.position = \"none\")\n# \n# ggplotly(map)\n# \n# \n# \n# #######\n# \n\n\nquarto-executable-code-5450563D\n# library(rworldmap)\n# europe &lt;- data.frame(\n#     \"country\" = c(\"Greece\", \"France\", \"Spain\", \"Italy\", \"UK\", \"Finland\", \"Norway\", \"Sweden\", \"Germany\", \"Romania\"),\n#     \"x\" = c(2.5, 3, 2.2, 1.8, 2.32, 1.99, 2.01, 2.34, 1.88, 2.45)\n# )\n# matched &lt;- joinCountryData2Map(europe, joinCode = \"NAME\", nameJoinColumn = \"country\")\n# \n# \n# # Get the coordinates for each country\n# country_coord &lt;- data.frame(coordinates(matched), stringsAsFactors = FALSE)\n# # Filter your desired countries\n# country &lt;- c(\"Greece\", \"France\", \"Spain\", \"Italy\", \"UK\", \"Finland\", \"Norway\", \"Sweden\", \"Germany\", \"Romania\")\n# country_coord &lt;- country_coord[country,]\n# # Insert country labels in the plot\n# text(x = country_coord$X1, y = country_coord$X2, labels = row.names(country_coord))\n# \n\n\npacman::p_load(tidyverse, \n               readr, \n               stringr,\n               sf, \n               plotly,\n               data.table)\n\n\n# ronaldo &lt;- read_csv(\"cr7.csv\")\n# messi &lt;- read_csv(\"messi.csv\")\n\nmessi$label &lt;- \"Messi\"\nronaldo$label &lt;- \"Ronaldo\"\n\ndf &lt;- rbind(messi,ronaldo)\n\ncountries &lt;- data.frame(coun = c('Moreirense FC - Portugal',\n               'Boavista FC - Portugal',\n               'CD Estarreja - Portugal',\n               'FC Oliveira do Hospital - Portugal',\n               'Portsmouth FC - England',\n               'Manchester City - England',\n               'Tottenham Hotspur - England',\n               'Birmingham City - England',\n               'Aston Villa - England',\n               'Millwall FC - England',\n               'Southampton FC - England',\n               'Exeter City - England',\n               'Arsenal FC - England',\n               'Everton FC - England',\n               'Fulham FC - England',\n               'Newcastle United - England',\n               'Debreceni VSC - Hungary',\n               'Middlesbrough FC - England',\n               'West Bromwich Albion - England',\n               'Bolton Wanderers - England',\n               'Wigan Athletic - England',\n               'Charlton Athletic - England',\n               'Reading FC - England',\n               'Watford FC - England',\n               'AS Roma - Italy',\n               'AC Milan - Italy',\n               'Sporting CP - Portugal',\n               'Dynamo Kyiv - Ukraine',\n               'Blackburn Rovers - England',\n               'Derby County - England',\n               'Sunderland AFC - England',\n               'West Ham United - England',\n               'Olympique Lyon - France',\n               'Liverpool FC - England',\n               'Chelsea FC - England',\n               'Hull City - England',\n               'Stoke City - England',\n               'Gamba Osaka - Japan',\n               'FC Internazionale - Italy',\n               'FC Porto - Portugal',\n               'Deportivo de La Coruña - Spain',\n               'RCD Espanyol Barcelona - Spain',\n               'FC Zürich - Switzerland',\n               'Xerez CD - Spain',\n               'Villarreal CF - Spain',\n               'Olympique Marseille - France',\n               'UD Almería - Spain',\n               'Real Zaragoza - Spain',\n               'Malaga CF - Spain',\n               'CD Tenerife - Spain',\n               'Sevilla FC - Spain',\n               'Real Valladolid CF - Spain',\n               'Getafe CF - Spain',\n               'Racing Santander - Spain',\n               'Valencia CF - Spain',\n               'CA Osasuna - Spain',\n               'RCD Mallorca - Spain',\n               'Athletic Bilbao - Spain',\n               'Hercules CF - Spain',\n               'Real Murcia CF - Spain',\n               'Ajax Amsterdam - Netherlands',\n               'AJ Auxerre - France',\n               'Levante UD - Spain',\n               'Atletico de Madrid - Spain',\n               'Real Sociedad - Spain',\n               'FC Barcelona - Spain',\n               'Rayo Vallecano - Spain',\n               'Sporting Gijón - Spain',\n               'SD Ponferradina - Spain',\n               'Granada CF - Spain',\n               'CSKA Moscow - Russia',\n               'Real Betis Balompie - Spain',\n               'APOEL Nicosia - Cyprus',\n               'Bayern Munich - Germany',\n               'Celta de Vigo - Spain',\n               'Borussia Dortmund - Germany',\n               'Manchester United - England',\n               'Galatasaray - Turkey',\n               'Elche CF - Spain',\n               'FC Copenhagen - Denmark',\n               'Juventus FC - Italy',\n               'FC Schalke 04 - Germany',\n               'Córdoba CF - Spain',\n               'FC Basel 1893 - Switzerland',\n               'Ludogorets Razgrad - Bulgaria',\n               'SD Eibar - Spain',\n               'Shakhtar Donetsk - Ukraine',\n               'Malmö FF - Sweden',\n               'UD Las Palmas - Spain',\n               'VfL Wolfsburg - Germany',\n               'Deportivo Alaves - Spain',\n               'CF America - Mexico',\n               'Kashima Antlers - Japan',\n               'Al-Jazira (Abu Dhabi) - United Arab Emirates',\n               'Grêmio Foot-Ball Porto Alegrense - Brazil',\n               'Paris Saint-Germain - France',\n               'Girona FC - Spain',\n               'US Sassuolo - Italy',\n               'Frosinone Calcio - Italy',\n               'Udinese Calcio - Italy',\n               'Genoa CFC - Italy',\n               'Empoli FC - Italy',\n               'SPAL - Italy',\n               'ACF Fiorentina - Italy',\n               'Torino FC - Italy',\n               'Atalanta BC - Italy',\n               'UC Sampdoria - Italy',\n               'SS Lazio - Italy',\n               'Parma Calcio 1913 - Italy',\n               'Inter Milan - Italy',\n               'SSC Napoli - Italy',\n               'Hellas Verona - Italy',\n               'Bayer 04 Leverkusen - Germany',\n               'Bologna FC 1909 - Italy',\n               'Cagliari Calcio - Italy',\n               'US Lecce - Italy',\n               'Spezia Calcio - Italy',\n               'Ferencvarosi TC - Hungary',\n               'FC Crotone - Italy',\n               'BSC Young Boys - Switzerland',\n               'Norwich City - England',\n               'Burnley FC - England',\n               'Brighton & Hove Albion - England',\n               'Brentford FC - England',\n               'FC Sheriff - Moldova',\n               'Albacete Balompie - Spain',\n               'Panathinaikos Athens - Greece',\n               'SV Werder Bremen - Germany',\n               'Real Madrid - Spain',\n               'Recreativo Huelva - Spain',\n               'Deportivo de La Coruña - Spain',\n               'Gimnastic de Tarragona - Spain',\n               'VfB Stuttgart - Germany',\n               'UD Almería - Spain',\n               'Rangers FC - Scotland',\n               'Celtic FC - Scotland',\n               'Benidorm CD - Spain',\n               'CD Numancia - Spain',\n               'Cultural Leonesa - Spain',\n               'CF Atlante - Mexico',\n               'Club Estudiantes de La Plata - Argentina',\n               'Club Atletico de Ceuta - Spain',\n               'BATE Borisov - Belarus',\n               'FC Viktoria Plzen - Czech Republic',\n               'Santos FC - Brazil',\n               'Spartak Moscow - Russia',\n               'CA River Plate - Argentina',\n               'CD Leganes - Spain',\n               'Borussia Mönchengladbach - Germany',\n               'Olympiacos Piraeus - Greece',\n               'SD Huesca - Spain',\n               'PSV Eindhoven - Netherlands',\n               'SK Slavia Prague - Czech Republic',\n               'Cadiz CF - Spain',\n               'RB Leipzig - Germany',\n               'FC Nantes - France',\n               'Club Brugge KV - Belgium',\n               'LOSC Lille - France',\n               'FC Lorient - France',\n               'RC Lens - France',\n               'Montpellier - France',\n               'Clermont Foot - France',\n               'Maccabi Haifa - Israel',\n               'OGC Nice - France',\n               'SL Benfica - Portugal',\n               'AC Ajaccio - France',\n               'ESTAC Troyes - France'\n)) \n\n\ncountries &lt;- separate(countries, coun, into = c(\"Opponent\", \"Country\"), sep = \" - \")\n\ndf &lt;- left_join(df, countries, by = \"Opponent\")\n\n# By Country/Region\n\nby_region &lt;- df |&gt;\n  mutate(Year = paste0(\"20\", str_sub(df$Date, -2, -1)) ) |&gt;\n  filter(Venue == \"A\" & !is.na(Country) & Year %in% c(paste0(\"200\",05:09),paste0(\"20\",10:22))) |&gt;\n  group_by(Country,label) |&gt;\n  summarise(count = n()) |&gt;\n  arrange(-count)\n\nfix &lt;- df |&gt;\n  mutate(Year = paste0(\"20\", str_sub(df$Date, -2, -1)) ) |&gt;\n  filter(Venue == \"H\" & !is.na(Country) & Year %in% c(paste0(\"200\",05:09),paste0(\"20\",10:22))) |&gt;\n  group_by(label, Club) |&gt;\n  summarise(count_h = n()) |&gt;\n  arrange(-count_h) |&gt;\n  glimpse()\n\n\n\nby_region &lt;- by_region |&gt;\n  mutate(count = case_when(Country == \"Spain\" & label == \"Messi\" ~ count + 383,\n                             Country == \"Spain\" & label == \"Ronaldo\" ~ count + 228,\n                             Country == \"France\" & label == \"Messi\" ~ count + 14,\n                             Country == \"England\" & label == \"Ronaldo\" ~ count + 87,\n                             Country == \"Italy\" & label == \"Ronaldo\" ~ count + 57,\n                             TRUE ~ count))\n\n# world_map &lt;- map_data(\"world\")\n\n# world_map_2 &lt;- world_map |&gt;\n#   mutate(region = ifelse(region == \"UK\",\"England\",region)) |&gt;\n#   group_by(region) |&gt;\n#   summarise(lat = round(mean(lat),1),\n#             long = round(mean(long),1))\n# \n# world_map_2 &lt;- subset(world_map_2, region %in% by_region$Country)\n# \n# by_region &lt;- left_join(by_region, world_map_2, by = c(\"Country\" = \"region\"))\n# \n# by_region &lt;- subset(by_region, !is.na(by_region$lat))\n\n\n# map_plot &lt;- ggplot(by_region, aes(fill = label, map_id = Country)) +\n#   geom_map(data = world_map, map = world_map,\n#            aes(long, lat, map_id = region),\n#            fill = \"gray90\", color = \"black\", linewidth = 0.1) +\n#    geom_point(aes(color = label, size = count_a, x = long, y = lat)) +\n#   coord_fixed(1.3) +\n#   theme_minimal() +\n#   theme_void() +\n#   scale_fill_manual(values = c(\"Ronaldo\" = \"blue\", \"Messi\" = \"red\")) +\n#   labs(title = \"Total Goals by Ronaldo and Messi per Country\") +\n#   theme(plot.title = element_text(hjust = 0.5)) \n# \n# map_plot\n\n## Function to calculate goals\n\ncalculate_goals &lt;- function(df,col){\n  \n  x &lt;- df |&gt;\n  mutate(Year = paste0(\"20\", str_sub(df$Date, -2, -1)) ) |&gt;\n  filter(!is.na(Country) & Year %in% c(paste0(\"200\",05:09),paste0(\"20\",10:22))) |&gt;\n  group_by(.data[[col]],label) |&gt;\n  summarise(count = n()) |&gt;\n  arrange(-count)\n  \n  # name &lt;- names(x)[which(names(x) == col)]\n  # \n  # names(x)[which(names(x) == \"count_a\")] &lt;- paste0(\"count_\", tolower(name))\n  \n  return(x)\n  \n}\n\n## By Opponent\n\nby_opponent &lt;- calculate_goals(df,'Opponent') \n\n## By Competition\n\nby_competition &lt;- calculate_goals(df,'Competition') \n\n## By Matchday\n\nby_matchday &lt;- calculate_goals(df,'Matchday') \n\n## By Last Minute Goals\n  \nby_lastminute &lt;- calculate_goals(df,'Minute')\n\nby_lastminute &lt;- by_lastminute |&gt;\n  mutate(Minute = case_when(grepl(\"^9|^10|^11|^12|^13\",Minute) ~ \"&gt;90\",\n                            grepl(\"^8\",Minute) ~ \"&gt;80\",\n                            grepl(\"^7\",Minute) ~ \"&gt;70\",\n                            grepl(\"^6\",Minute) ~ \"&gt;60\",\n                            grepl(\"^5\",Minute) ~ \"&gt;50\",\n                            grepl(\"^4\",Minute) ~ \"&gt;40\",\n                            grepl(\"^3\",Minute) ~ \"&gt;30\",\n                            grepl(\"^2\",Minute) ~ \"&gt;20\",\n                            TRUE ~ \"&lt;10\")) |&gt;\n  group_by(Minute,label) |&gt;\n  summarise(count = n()) \n\n##################################################\n\n## Dropdown filters\n\nfilter_region &lt;- c(\"Spain\",\"England\",\"France\",\"Germany\",\"Italy\")\nfilter_competition &lt;- c('LaLiga','UEFA Champions League','Copa del Rey')\nfilter_opponent &lt;- c(\"Real Madrid\", \"FC Barcelona\", \"Manchester United\", \"Bayern Munich\", \"Liverpool FC\", \"Chelsea FC\", \"Juventus FC\", \"Paris Saint-Germain\", \"Arsenal FC\", \"Borussia Dortmund\")\nfilter_matchday &lt;- c('Quarter-Finals','Semi-Finals','Final')\nfilter_minute &lt;- c(\"&gt;90\",\"&gt;80\")\n\n\n## Make a combined data frame\n\nby_region &lt;- by_region |&gt; rename(plot_filter = Country) |&gt; mutate(val = \"Region\")\nby_competition &lt;- by_competition |&gt; rename(plot_filter = Competition) |&gt; mutate(val = \"Competition\")\nby_lastminute &lt;- by_lastminute |&gt; rename(plot_filter = Minute) |&gt; mutate(val = \"Goal Time\")\nby_opponent &lt;- by_opponent |&gt; rename(plot_filter = Opponent) |&gt; mutate(val = \"Opponent\")\nby_matchday &lt;- by_matchday |&gt; rename(plot_filter = Matchday) |&gt; mutate(val = \"Matchday\")\n\ncombined_df &lt;- rbind(by_region,by_competition,by_lastminute,by_matchday,by_opponent)\n\n\n\n\n##################################################\n\n## Plot Function\n\n\nplotter &lt;- function(filter, df) {\n\nb &lt;- ggplot(combined_df |&gt;\n                     filter(plot_filter == filter), aes(x = plot_filter,\n                                    y = count,\n                                    fill = label)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  theme_minimal() +\n  labs(title = filter,\n       x = \"\", y = \"Number of Goals\", fill = \"Player\") +\n  theme(plot.title = element_text(hjust = 0.5),\n        axis.text.x = element_blank(),\n        panel.grid.minor = element_blank()) +\n  scale_fill_manual(values = c(\"Ronaldo\" = \"blue\", \"Messi\" = \"red\"))\n\nreturn(print(b))\n\n}\n\nplotter &lt;- function(filter, df) {\n  b &lt;- ggplot(df[df$plot_filter == filter, ], aes(x = plot_filter, y = count, fill = label)) +\n    geom_bar(stat = \"identity\", position = \"dodge\") +\n    theme_minimal() +\n    labs(title = filter, x = \"\", y = \"Number of Goals\", fill = \"Player\") +\n    theme(plot.title = element_text(hjust = 0.5), \n          axis.text.x = element_blank(), \n          panel.grid.minor = element_blank()) +\n    scale_fill_manual(values = c(\"Ronaldo\" = \"blue\", \"Messi\" = \"red\"))\n  return(b)\n}\n\n\n\n\n\nCountry\n```{r , echo=FALSE, warning=FALSE, results=“asis”}\nfilter_region &lt;- c(“Spain”,“England”,“France”,“Germany”,“Italy”)\ncat(“## Select Country”) cat(“{.tabset .tabset-pills}\\n\") for (country in filter_region) {   cat(paste0(\"### \", country, \"\\n\\n\"))   cat(\"”) cat(“#### Plot”) print(plotter(country, combined_df)) cat(“”) cat(“#### Code”) cat(“{r}\\n\")   cat(\"plotter(\", country, \", combined_df)\\n\")   cat(\"”) cat(“”) cat(“#### Description”) cat(“This plot shows the number of goals for players in”, country, “.”) cat(“”) } cat(“```”)\n\n:::"
  },
  {
    "objectID": "index.html#comparing-ronaldo-vs-messi-statistics",
    "href": "index.html#comparing-ronaldo-vs-messi-statistics",
    "title": "Project Title",
    "section": "Comparing Ronaldo vs Messi Statistics",
    "text": "Comparing Ronaldo vs Messi Statistics\n\nCountry\n\nfor(i in filter_region) {\n  print(plotter(i, combined_df))\n}\n\n\n\n\nCompetition\n\nfor(i in filter_competition) {\n  print(plotter(i, combined_df))\n}\n\n\n\n\nOpponent\n\nfor(i in filter_opponent) {\n  print(plotter(i, combined_df))\n}\n\n\n\n\nMatchday\n\nfor(i in filter_matchday) {\n  print(plotter(i, combined_df))\n}\n\n\n\n\nLast Minute Goals\n\nfor(i in filter_minute) {\n  print(plotter(i, combined_df))\n}"
  }
]